@import './colorlist.scss';

.modals {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  > .modal-wr {
    position: absolute;
    width: 30vh;
    flex-direction: column;
    opacity: 0;
    pointer-events: all;
    z-index: 10;
    background: rgba($grey, 0.1);
    backdrop-filter: blur(4rh);
    @supports not (backdrop-filter: blur(1rh)) { background: rgba($lmain, 0.8) }
    &.w100 {
      width: calc(80% - 2vh);
      left: 2vh;
      bottom: 1vh;
    }
    &.p .modal {
      padding: 1vh;
    }
    &.column .modal {
      flex-direction: column;
    }
    &.modal-fadein-enter {
      opacity: 0;
      &.align-right { transform: translateX(4vh) }
      &.align-left { transform: translateX(-4vh) }
      &-active {
        opacity: 1;
        &.align-right { transform: translateX(1vh) }
        &.align-left { transform: translateX(-1vh) }
        transition: 0.2s linear;
      }
      &-done {
        opacity: 1;
        &.align-right { transform: translateX(1vh) }
        &.align-left { transform: translateX(-1vh) }
      }
    }
    &.modal-fadein-exit {
      opacity: 1;
      &.align-right { transform: translateX(1vh) }
      &.align-left { transform: translateX(-1vh) }
      &-active {
        opacity: 0;
        &.align-right { transform: translateX(4vh) }
        &.align-left { transform: translateX(-4vh) }
        transition: 0.2s linear;
      }
    }
    > .modal-title {
      width: 100%;
      height: 4vh;
      background: rgba($white, 0.5);
    }
    > .modal-container {
      width: 100%;
      max-height: 60vh;
      max-height: clamp(4vh, 60vh, calc(100rh - 4vh));
      min-height: 4vh;
      .modal {
        flex: 1;
        flex-direction: column;
        > .obj-edit-el {
          align-items: center;
          padding: 0.7vh 1vh;
          border-left: 0.5vh solid;
          cursor: pointer;
          &:not(:last-child) {
            margin-bottom: 0.5vh;
          }
          &:hover {
            background: $dmain;
          }
          > img {
            height: 1.5vh;
            opacity: 0.5;
            margin-right: 1vh;
          }
        }
      }
    }
    &.emoji > .modal-container > .modal {
      > .emoji-search-list {
        flex-wrap: wrap;
        > .emoji-el {
          width: 4vh;
          height: 4vh;
          font-size: 2vh;
          justify-content: center;
          align-items: center;
          cursor: pointer;
          > div {
            width: 2.8vh;
            height: 2.8vh;
            background-image: url(/static/img/emoji.png);
          }
          &:hover {
            background: $dmain;
          }
        }
      }
      > .expansion-panel > .ep-dropdown {
        flex-wrap: wrap;
        padding: 0;
        > .category-emoji-el {
          width: 4vh;
          height: 4vh;
          font-size: 2vh;
          justify-content: center;
          align-items: center;
          cursor: pointer;
          > div {
            width: 2.8vh;
            height: 2.8vh;
            background-image: url(/static/img/emoji.png);
          }
          &:hover {
            background: $dmain;
          }
        }
      }
    }
    &.color-picker-modal .modal {
      > * > canvas {
        flex: 1;
      }
      > #c-picker {
        position: relative;
        height: 20vh;
        flex: 1;
        margin-bottom: 1vh;
        > .cursor {
          position: absolute;
          width: 1vh;
          height: 1vh;
          border: 0.2vh solid $white;
          transform: translateX(-50%) translateY(-50%);
        }
      }
      > #c-slider {
        position: relative;
        height: 3vh;
        margin-bottom: 1vh;
      }
      > #c-opacity {
        position: relative;
        height: 3vh;
        margin-bottom: 1vh;
      }
      > #c-slider, > #c-opacity {
        > .cursor {
          position: absolute;
          width: 1vh;
          height: 100%;
          border: 0.2vh solid $white;
          transform: translateX(-50%);
        }
      }
      > .picked {
        height: 3.5vh;
      }
      .cp-button {
        height: 3.5vh;
        flex: 1;
      }
      .cp-button-wide {
        width: 100%;
        height: 3.5vh;
      }
      .cp-button, .cp-button-wide {
        justify-content: center;
        align-items: center;
        border-bottom: 0.2vh solid;
        cursor: pointer;
        &:hover {
          background: rgba($grey, 0.2);
        }
      }
    }
  }
  > .modal-fs-bg {
    position: absolute;
    left: 0;
    top: 0;
    width: 100vw;
    height: 100rh;
    opacity: 0;
    justify-content: center;
    align-items: center;
    background: rgba($black, 0.5);
    z-index: 10;
    pointer-events: all;
    > .modal-fs-wr {
      width: 75vh;
      flex-direction: column;
      background: rgba($grey, 0.2);
      backdrop-filter: blur(1rh);
      @supports not (backdrop-filter: blur(1rh)) { background: rgba($lmain, 0.8) }
      > .modal-title {
        width: 100%;
        height: 4vh;
        align-items: center;
        padding: 0 2vh;
        color: $black;
        font-family: 'Bold';
        font-size: 1.8vh;
        background: rgba($white, 0.5);
      }
      > .modal-fs-container {
        max-height: 90rh;
        .modal-fs {
          flex: 1;
          flex-direction: column;
          padding: 1vh;
          &.p {
            padding: 1vh;
          }
          &.column {
            flex-direction: column;
          }
        }
      }
    }
    &.modal-fadein-enter {
      opacity: 0;
      > .modal-fs-wr { transform: translateY(4vh) }
      &-active {
        opacity: 1;
        > .modal-fs-wr {
          transform: translateY(0);
          transition: 0.2s linear;
        }
        transition: 0.2s linear;
      }
      &-done {
        opacity: 1;
        transform: translateY(0);
      }
    }
    &.modal-fadein-exit {
      opacity: 1;
      > .modal-fs-wr { transform: translateY(0) }
      &-active {
        opacity: 0;
        > .modal-fs-wr {
          transform: translateY(4vh);
          transition: 0.2s linear;
        }
        transition: 0.2s linear;
      }
    }
  }
}